{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2b1c9269-6c1e-4824-9588-e7eb334c9e7a",
   "metadata": {},
   "source": [
    "# Work by: Leopoldo Rojo Romero\n",
    "Student ID: 2023355\n",
    "\n",
    "Higher Diploma in Science in Data Analytics for Business\n",
    "\n",
    "Machine Learning for Business\n",
    "\n",
    "Dr. Muhammad Iqbal\n",
    "\n",
    "CCT College\n",
    "\n",
    "Dublin, Ireland\n",
    "\n",
    "*NOTE: If you are using the most recent version of Jupyter Notebook (7.0.8), you can navigate this notebook easily using the tabe of contents (Crtl+Shift+K).*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "64759c79-0908-411b-8ad8-afb824f42a40",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (2.2.2)\n",
      "Requirement already satisfied: numpy>=1.23.2 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from pandas) (1.24.3)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from pandas) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from pandas) (2022.7)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from pandas) (2024.1)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n",
      "Requirement already satisfied: missingno in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (0.5.2)\n",
      "Requirement already satisfied: numpy in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from missingno) (1.24.3)\n",
      "Requirement already satisfied: matplotlib in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from missingno) (3.7.1)\n",
      "Requirement already satisfied: scipy in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from missingno) (1.10.1)\n",
      "Requirement already satisfied: seaborn in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from missingno) (0.12.2)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from matplotlib->missingno) (1.0.5)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from matplotlib->missingno) (0.11.0)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from matplotlib->missingno) (4.25.0)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from matplotlib->missingno) (1.4.4)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from matplotlib->missingno) (23.0)\n",
      "Requirement already satisfied: pillow>=6.2.0 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from matplotlib->missingno) (9.4.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from matplotlib->missingno) (3.0.9)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from matplotlib->missingno) (2.8.2)\n",
      "Requirement already satisfied: pandas>=0.25 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from seaborn->missingno) (2.2.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from pandas>=0.25->seaborn->missingno) (2022.7)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from pandas>=0.25->seaborn->missingno) (2024.1)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\lrojo\\anaconda3\\lib\\site-packages (from python-dateutil>=2.7->matplotlib->missingno) (1.16.0)\n"
     ]
    }
   ],
   "source": [
    "# if needed\n",
    "!pip install --upgrade pandas\n",
    "!pip install missingno"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "74aa526e-aab3-4ae6-8499-1a8b1e4652cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from fcmeans import FCM\n",
    "from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n",
    "from statsmodels.tsa.arima_model import ARIMA\n",
    "import statsmodels.api as sm\n",
    "import statsmodels.tsa.api as smtsa\n",
    "import warnings\n",
    "\n",
    "#warnings.filterwarnings('ignore)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e095fab-bba8-406d-9bf8-4ac1101a98a9",
   "metadata": {},
   "source": [
    "## Introduction:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8326f86a-78b5-4e05-a31a-e06af32212bb",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "54cbdcc4-5885-4b88-a9ee-f62055a45d18",
   "metadata": {},
   "source": [
    "## Clustering:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "003d5fa6-a7f3-4d0c-a9e8-dba8388c777a",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "9ad75717-4b1f-4259-9973-82e427ff8d0f",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "126cc966-5f75-4e92-b4f7-9a909566f6e3",
   "metadata": {},
   "source": [
    "### Clustering Dataset: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "79ac64b2-b224-4cd3-9705-205a7cb3fe57",
   "metadata": {},
   "outputs": [],
   "source": [
    "clu = pd.read_csv('ObesityDataSet_raw_and_data_sinthetic.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8908ec36-b301-4ca2-a636-1b294cb19164",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Height</th>\n",
       "      <th>Weight</th>\n",
       "      <th>family_history_with_overweight</th>\n",
       "      <th>FAVC</th>\n",
       "      <th>FCVC</th>\n",
       "      <th>NCP</th>\n",
       "      <th>CAEC</th>\n",
       "      <th>SMOKE</th>\n",
       "      <th>CH2O</th>\n",
       "      <th>SCC</th>\n",
       "      <th>FAF</th>\n",
       "      <th>TUE</th>\n",
       "      <th>CALC</th>\n",
       "      <th>MTRANS</th>\n",
       "      <th>NObeyesdad</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Female</td>\n",
       "      <td>21.0</td>\n",
       "      <td>1.62</td>\n",
       "      <td>64.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Sometimes</td>\n",
       "      <td>no</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>no</td>\n",
       "      <td>Public_Transportation</td>\n",
       "      <td>Normal_Weight</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Female</td>\n",
       "      <td>21.0</td>\n",
       "      <td>1.52</td>\n",
       "      <td>56.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Sometimes</td>\n",
       "      <td>yes</td>\n",
       "      <td>3.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Sometimes</td>\n",
       "      <td>Public_Transportation</td>\n",
       "      <td>Normal_Weight</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.80</td>\n",
       "      <td>77.0</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Sometimes</td>\n",
       "      <td>no</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Frequently</td>\n",
       "      <td>Public_Transportation</td>\n",
       "      <td>Normal_Weight</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>1.80</td>\n",
       "      <td>87.0</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Sometimes</td>\n",
       "      <td>no</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Frequently</td>\n",
       "      <td>Walking</td>\n",
       "      <td>Overweight_Level_I</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1.78</td>\n",
       "      <td>89.8</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Sometimes</td>\n",
       "      <td>no</td>\n",
       "      <td>2.0</td>\n",
       "      <td>no</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Sometimes</td>\n",
       "      <td>Public_Transportation</td>\n",
       "      <td>Overweight_Level_II</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Gender   Age  Height  ...        CALC                 MTRANS           NObeyesdad\n",
       "0  Female  21.0    1.62  ...          no  Public_Transportation        Normal_Weight\n",
       "1  Female  21.0    1.52  ...   Sometimes  Public_Transportation        Normal_Weight\n",
       "2    Male  23.0    1.80  ...  Frequently  Public_Transportation        Normal_Weight\n",
       "3    Male  27.0    1.80  ...  Frequently                Walking   Overweight_Level_I\n",
       "4    Male  22.0    1.78  ...   Sometimes  Public_Transportation  Overweight_Level_II\n",
       "\n",
       "[5 rows x 17 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clu.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0ee568ca-f8c7-406c-a018-e6fe53ce37dd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2111 entries, 0 to 2110\n",
      "Data columns (total 17 columns):\n",
      " #   Column                          Non-Null Count  Dtype  \n",
      "---  ------                          --------------  -----  \n",
      " 0   Gender                          2111 non-null   object \n",
      " 1   Age                             2111 non-null   float64\n",
      " 2   Height                          2111 non-null   float64\n",
      " 3   Weight                          2111 non-null   float64\n",
      " 4   family_history_with_overweight  2111 non-null   object \n",
      " 5   FAVC                            2111 non-null   object \n",
      " 6   FCVC                            2111 non-null   float64\n",
      " 7   NCP                             2111 non-null   float64\n",
      " 8   CAEC                            2111 non-null   object \n",
      " 9   SMOKE                           2111 non-null   object \n",
      " 10  CH2O                            2111 non-null   float64\n",
      " 11  SCC                             2111 non-null   object \n",
      " 12  FAF                             2111 non-null   float64\n",
      " 13  TUE                             2111 non-null   float64\n",
      " 14  CALC                            2111 non-null   object \n",
      " 15  MTRANS                          2111 non-null   object \n",
      " 16  NObeyesdad                      2111 non-null   object \n",
      "dtypes: float64(8), object(9)\n",
      "memory usage: 280.5+ KB\n"
     ]
    }
   ],
   "source": [
    "clu.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "96abcb69-cec0-4fb7-a5c5-2e9362b75c7e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Height</th>\n",
       "      <th>Weight</th>\n",
       "      <th>FCVC</th>\n",
       "      <th>NCP</th>\n",
       "      <th>CH2O</th>\n",
       "      <th>FAF</th>\n",
       "      <th>TUE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2111.000000</td>\n",
       "      <td>2111.000000</td>\n",
       "      <td>2111.000000</td>\n",
       "      <td>2111.000000</td>\n",
       "      <td>2111.000000</td>\n",
       "      <td>2111.000000</td>\n",
       "      <td>2111.000000</td>\n",
       "      <td>2111.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>24.312600</td>\n",
       "      <td>1.701677</td>\n",
       "      <td>86.586058</td>\n",
       "      <td>2.419043</td>\n",
       "      <td>2.685628</td>\n",
       "      <td>2.008011</td>\n",
       "      <td>1.010298</td>\n",
       "      <td>0.657866</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6.345968</td>\n",
       "      <td>0.093305</td>\n",
       "      <td>26.191172</td>\n",
       "      <td>0.533927</td>\n",
       "      <td>0.778039</td>\n",
       "      <td>0.612953</td>\n",
       "      <td>0.850592</td>\n",
       "      <td>0.608927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>14.000000</td>\n",
       "      <td>1.450000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>19.947192</td>\n",
       "      <td>1.630000</td>\n",
       "      <td>65.473343</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.658738</td>\n",
       "      <td>1.584812</td>\n",
       "      <td>0.124505</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>22.777890</td>\n",
       "      <td>1.700499</td>\n",
       "      <td>83.000000</td>\n",
       "      <td>2.385502</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.625350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>26.000000</td>\n",
       "      <td>1.768464</td>\n",
       "      <td>107.430682</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.477420</td>\n",
       "      <td>1.666678</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>61.000000</td>\n",
       "      <td>1.980000</td>\n",
       "      <td>173.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Age       Height  ...          FAF          TUE\n",
       "count  2111.000000  2111.000000  ...  2111.000000  2111.000000\n",
       "mean     24.312600     1.701677  ...     1.010298     0.657866\n",
       "std       6.345968     0.093305  ...     0.850592     0.608927\n",
       "min      14.000000     1.450000  ...     0.000000     0.000000\n",
       "25%      19.947192     1.630000  ...     0.124505     0.000000\n",
       "50%      22.777890     1.700499  ...     1.000000     0.625350\n",
       "75%      26.000000     1.768464  ...     1.666678     1.000000\n",
       "max      61.000000     1.980000  ...     3.000000     2.000000\n",
       "\n",
       "[8 rows x 8 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clu.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d3620c6-d6ba-43d8-b9b5-bb90c0f0b983",
   "metadata": {},
   "source": [
    "### Null Values:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85fb718a-9603-400d-a7db-188b7863cca5",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aa2ce32c-98a5-4b05-a47c-72558fbb7e53",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "03f2bc4a-daf2-4f67-b97f-742c7670c372",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e0c83f3-d5a8-44a6-8624-559eadea1164",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "021f29a7-3568-4500-8e12-dab5e050621c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "749255e8-4a2c-4de6-aaec-c16446df1f7d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6c45a3dc-8fa3-4a5c-8c10-ec528f44aa4e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "e98064c4-28d5-4944-8eff-1fb27058500c",
   "metadata": {},
   "source": [
    "## Time Series:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8f1f308-b294-480e-aa13-ae2f3ea5bb18",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "2aa03e4a-7335-4b9b-a8f5-0293848bafc3",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "bee82e9e-1d41-4ea2-a75b-06e5c309f565",
   "metadata": {},
   "source": [
    "### Time Series Dataset: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "50db9f9a-1f7d-406f-819c-cadd999339ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "time_s = pd.read_csv('LMT.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f3061a8c-3694-4374-88c4-b926c30f5de1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1985-01-01</td>\n",
       "      <td>13.381902</td>\n",
       "      <td>14.877301</td>\n",
       "      <td>12.500000</td>\n",
       "      <td>14.455521</td>\n",
       "      <td>4.971642</td>\n",
       "      <td>23540786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1985-02-01</td>\n",
       "      <td>14.263804</td>\n",
       "      <td>16.411043</td>\n",
       "      <td>13.918712</td>\n",
       "      <td>15.529141</td>\n",
       "      <td>5.340889</td>\n",
       "      <td>29822480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1985-03-01</td>\n",
       "      <td>15.644172</td>\n",
       "      <td>16.334356</td>\n",
       "      <td>14.110429</td>\n",
       "      <td>14.838957</td>\n",
       "      <td>5.118644</td>\n",
       "      <td>22144528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1985-04-01</td>\n",
       "      <td>14.915644</td>\n",
       "      <td>15.184049</td>\n",
       "      <td>13.957055</td>\n",
       "      <td>14.455521</td>\n",
       "      <td>4.986383</td>\n",
       "      <td>15230068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1985-05-01</td>\n",
       "      <td>14.493865</td>\n",
       "      <td>16.372700</td>\n",
       "      <td>13.650307</td>\n",
       "      <td>15.835890</td>\n",
       "      <td>5.462530</td>\n",
       "      <td>22593430</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date       Open       High        Low      Close  Adj Close    Volume\n",
       "0  1985-01-01  13.381902  14.877301  12.500000  14.455521   4.971642  23540786\n",
       "1  1985-02-01  14.263804  16.411043  13.918712  15.529141   5.340889  29822480\n",
       "2  1985-03-01  15.644172  16.334356  14.110429  14.838957   5.118644  22144528\n",
       "3  1985-04-01  14.915644  15.184049  13.957055  14.455521   4.986383  15230068\n",
       "4  1985-05-01  14.493865  16.372700  13.650307  15.835890   5.462530  22593430"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "time_s.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b12d0e08-af40-4d58-bd8a-28eb1615f65d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 473 entries, 0 to 472\n",
      "Data columns (total 7 columns):\n",
      " #   Column     Non-Null Count  Dtype  \n",
      "---  ------     --------------  -----  \n",
      " 0   Date       473 non-null    object \n",
      " 1   Open       473 non-null    float64\n",
      " 2   High       473 non-null    float64\n",
      " 3   Low        473 non-null    float64\n",
      " 4   Close      473 non-null    float64\n",
      " 5   Adj Close  473 non-null    float64\n",
      " 6   Volume     473 non-null    int64  \n",
      "dtypes: float64(5), int64(1), object(1)\n",
      "memory usage: 26.0+ KB\n"
     ]
    }
   ],
   "source": [
    "time_s.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "31d0911c-b78f-47a3-acf5-a6ee06fdf279",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>473.000000</td>\n",
       "      <td>473.000000</td>\n",
       "      <td>473.000000</td>\n",
       "      <td>473.000000</td>\n",
       "      <td>473.000000</td>\n",
       "      <td>4.730000e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>119.302216</td>\n",
       "      <td>125.388795</td>\n",
       "      <td>113.927337</td>\n",
       "      <td>120.181333</td>\n",
       "      <td>96.883033</td>\n",
       "      <td>3.274414e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>133.628778</td>\n",
       "      <td>140.097818</td>\n",
       "      <td>128.027841</td>\n",
       "      <td>134.335934</td>\n",
       "      <td>128.991893</td>\n",
       "      <td>1.918104e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>7.783742</td>\n",
       "      <td>8.205521</td>\n",
       "      <td>7.592025</td>\n",
       "      <td>7.860429</td>\n",
       "      <td>3.181921</td>\n",
       "      <td>1.247205e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>21.000000</td>\n",
       "      <td>22.200920</td>\n",
       "      <td>19.670244</td>\n",
       "      <td>21.088957</td>\n",
       "      <td>10.355659</td>\n",
       "      <td>2.030000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>60.500000</td>\n",
       "      <td>61.970001</td>\n",
       "      <td>57.349998</td>\n",
       "      <td>60.599998</td>\n",
       "      <td>35.095600</td>\n",
       "      <td>2.899053e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>163.880005</td>\n",
       "      <td>171.360001</td>\n",
       "      <td>160.360001</td>\n",
       "      <td>166.970001</td>\n",
       "      <td>128.106201</td>\n",
       "      <td>4.314130e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>486.519989</td>\n",
       "      <td>508.100006</td>\n",
       "      <td>473.670013</td>\n",
       "      <td>486.679993</td>\n",
       "      <td>470.197845</td>\n",
       "      <td>1.462322e+08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Open        High         Low       Close   Adj Close        Volume\n",
       "count  473.000000  473.000000  473.000000  473.000000  473.000000  4.730000e+02\n",
       "mean   119.302216  125.388795  113.927337  120.181333   96.883033  3.274414e+07\n",
       "std    133.628778  140.097818  128.027841  134.335934  128.991893  1.918104e+07\n",
       "min      7.783742    8.205521    7.592025    7.860429    3.181921  1.247205e+06\n",
       "25%     21.000000   22.200920   19.670244   21.088957   10.355659  2.030000e+07\n",
       "50%     60.500000   61.970001   57.349998   60.599998   35.095600  2.899053e+07\n",
       "75%    163.880005  171.360001  160.360001  166.970001  128.106201  4.314130e+07\n",
       "max    486.519989  508.100006  473.670013  486.679993  470.197845  1.462322e+08"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "time_s.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6dcf142-abe4-4c54-aae2-aea051e9afeb",
   "metadata": {},
   "source": [
    "### Null Values:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "86ab6f44-4142-47fb-8521-9b8d80729b81",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b16fcc13-ecda-4986-a24e-ce68ec1384fe",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bdc3dc6-a652-4994-933b-d7c1969c5ad8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "10f42a97-ee15-45d7-a10f-410fd8eb64ac",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
